<?xml version="1.0" encoding="utf-8"?>

<launch>
  <arg name="model" default="waffle"/>

  <!-- Start position of waffle robot in scene -->
  <arg name="x_pos" default="-3.0"/>
  <arg name="y_pos" default="1.0"/>
  <arg name="z_pos" default="0.0"/>

  <!-- Start gazebo server with turtlebot3_house scene -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="false"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Load robot_description param for tf, rviz and gazebo spawn -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find elevation_mapping_demos)/models/turtlebot3_description/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <!-- Spawn turtlebot into gazebo based on robot_description -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3 -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <!-- Publish turtlebot3 tf's -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="waffle_state_publisher" />

  <!-- Publish tf 'base_footprint' as pose-->
  <node pkg="elevation_mapping_demos" type="tf_to_pose_publisher.py" name="waffle_pose_publisher">
    <param name="from_frame" type="string" value="odom" />
    <param name="to_frame" type="string" value="base_footprint" />
  </node>
  
  <!-- Elevation mapping node -->
  <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/robots/waffle_robot.yaml" />
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/elevation_maps/long_range.yaml" />
    <rosparam command="load" file="$(find elevation_mapping)/config/sensor_processors/perfect.yaml" />
  </node>

  <!-- Launch RViz with the demo configuration -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find elevation_mapping_demos)/rviz/turtlebot3_waffle_demo.rviz" />

</launch>
